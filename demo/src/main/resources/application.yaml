spring:
  application:
    name: demo
  port: 8080

  datasource:
    url: jdbc:mysql://localhost:3306/local?useSSL=false&serverTimeZone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
server:
  port: 8080
  ssl:
    enable: true
    key-store: classpath:keystore.p12
    key-store-password: changeit
    key-store-type: PKCS12
    key-alias: springboot-local


    security:
      oauth2:
        client:
          registration:
            auth0:
              client-id: eoUEc8CMhxEGL2XciBcnaV0HVYGJTkSb
              client-secret: Ybq81H9rLSy4iL9VoQAk-2n3XMzwdfZxaOqRoisW_ENZCfrFmSy_pgV38xGoyVe4
              authorization-grant-type: authorization_code
              redirect-uri: "{baseUrl}/login/oauth2/code/"
              scope: openid profile email
          provider:
            auth0:
              authorization-uri: https://dev-5etaw83vgc3r23ao.us.auth0.com/authorize
              token-uri: https://dev-5etaw83vgc3r23ao.us.auth0.com/oauth/token
              user-info-uri: https://dev-5etaw83vgc3r23ao.us.auth0.com/userinfo
              jwk-set-uri: https://dev-5etaw83vgc3r23ao.us.auth0.com/.well-known/jwks.json


    kafka:
      producer:
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
      consumer:
        auto-offset-reset: earliest
        value-serializer: org.apache.kafka.common.serialization.StringDeserializer
        group-id: demo-group
        key-serializer: org.apache.kafka.common.serialization.StringDeserializer
      bootstrap-servers: localhost:9092

